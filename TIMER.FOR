	SUBROUTINE TIMRB ! NOTE BEGINNING OF TIMED INTERVAL
C
C	SAVE CURRENT PROCESS STATISTICS IN VARIABLES IN COMMON
C	USAGE:
C		CALL TIMRB	!START OF TIMED INTERVAL
C
C	THIS SUBROUTINE ALSO DEFINES AND DATA-INITIALIZES LOGICAL
C	UNITS WHICH WILL BE USED BY BENCHMARK PROGRAMS
C	..THIS IS RETAINED FOR COMPATIBILITY WITH PDP-11 VERSION
C	DEFINE AND INITIALIZE LOGICAL UNIT ASSIGNMENTS:
C	   ICRD  - 1    DATA INPUT (IF REQUIRED)
C	   ILPT  - 4    LINE PRINTER BULK OUTPUT
C	   IKBD  - 5    KEYBOARD INPUT (IF REQUIRED)
C	   ITTY  - 6    TTY OUTPUT, INCLUDING ELAPSED TIME INFORMATION
C
C	COMMON /LUNS/ ICRD,ILPT,IKBD,ITTY
C	DATA	    ICRD,ILPT,IKBD,ITTY / 1,4,5,6 /
C
C

	COMMON /STAT_VARS/ T0,BUFIO,CPUTIME,DIRIO,PFLTS
	INTEGER*4 BUFIO,CPUTIME,DIRIO,PFLTS

	COMMON /JOB_PARAM/ LEN4A,BUFIO_CODE,BUFIO_ADR,ZERO,
	2		LEN4B,CPUTIME_CODE,CPUTIME_ADR,ZERO1,
	2		LEN4C,DIRIO_CODE,DIRIO_ADR,ZERO2,
	2		LEN4D,PFLTS_CODE,PFLTS_ADR,ZERO3,
	2		ZERO4
	INTEGER*2 LEN4A,LEN4B,LEN4C,LEN4D
	INTEGER*2 BUFIO_CODE,CPUTIME_CODE,DIRIO_CODE,PFLTS_CODE
	INTEGER*4 BUFIO_ADR,CPUTIME_ADR,DIRIO_ADR,PFLTS_ADR
	INTEGER*4 NEW_BUFIO,NEW_CPUTIME,NEW_DIRIO,NEW_PFLTS
	INTEGER*4 ZERO,ZERO1,ZERO2,ZERO3,ZERO4,SYS$GETJPI
C
C	**** NOTE THE FOLLOWING CODES ARE VMS SYMBOLLIC PARAMS.
C	.... THEY MAY CHANGE IN FUTURE VERSIONS OF VMS...BEWARE!
	DATA BUFIO_CODE /1036/		! JPI$_BUFIO
	DATA CPUTIME_CODE /1031/	! JPI$_CPUTIM
	DATA DIRIO_CODE /1035/		! JPI$_DIRIO
	DATA PFLTS_CODE /1034/		! JPI$_PAGEFLTS
	DATA LEN4A,LEN4B,LEN4C,LEN4D /4,4,4,4/
C
C
C	==================================================
	T0 = SECNDS(0.)
	BUFIO_ADR	= %LOC(BUFIO)
	CPUTIME_ADR	= %LOC(CPUTIME)
	DIRIO_ADR	= %LOC(DIRIO)
	PFLTS_ADR	= %LOC(PFLTS)

	IF (.NOT. SYS$GETJPI(,,,LEN4A,,,)) THEN
	    WRITE(9,*) 'ERROR FROM SYS$GETJPI'
	    ENDIF

	RETURN

	ENTRY TIMRE ! PRINT EXECUTION STATISTICS FOR INTERVAL

C	USAGE:
C		CALL TIMRE	!END OF TIMED INTERVAL
C	
C	TIMRE OBTAINS PROCESS STATISTICS AND SUBTRACTS THE
C	BEGINNING-OF-INTERVAL STATISTICS RECORDED BY TIMRB.
C	THE INCREMENTAL VALUES ARE WRITTEN TO UNIT "TTY"
C	(FORTRAN UNIT 9).
	BUFIO_ADR	= %LOC(NEW_BUFIO)
	CPUTIME_ADR	= %LOC(NEW_CPUTIME)
	DIRIO_ADR	= %LOC(NEW_DIRIO)
	PFLTS_ADR	= %LOC(NEW_PFLTS)

	IF (.NOT. SYS$GETJPI(,,,LEN4A,,,)) THEN
	    WRITE(9,*) 'ERROR FROM SYS$GETJPI'
	    ENDIF

	CLKTIME = SECNDS(T0)

	CPUSECS = (NEW_CPUTIME-CPUTIME)/100.
	BUFIO = NEW_BUFIO - BUFIO
	DIRIO = NEW_DIRIO - DIRIO
	PFLTS = NEW_PFLTS - PFLTS

	WRITE(9,99) CPUSECS,CLKTIME,PFLTS,DIRIO,BUFIO

99	FORMAT(
	1 '0TIMES IN SECONDS',T22,' PAGE ',T32,'DIRECT',T42,'BUFFERED'/
	2 '     CPU  ELAPSED',T22,'FAULTS',T32,' I/O  ',T42,'  I/O'   /
	3 1X, F7.3,   F9.3   ,T21, I7     ,T31,   I7   ,T43,    I7    /)

C	SAVE STATE FOR NEXT TIME AROUND
C	THE USER IS SUPPOSED TO CALL TIMRB AGAIN, BUT IN CASE HE DOESN'T ...

	T0 = SECNDS(0.)
	CPUTIME = NEW_CPUTIME
	BUFIO = NEW_BUFIO
	DIRIO = NEW_DIRIO
	PFLTS = NEW_PFLTS
	RETURN
	END
