#	Zilch Screen Editor, Copyright (c) 1982,1986,1987 William P. Wood, Jr.

define(header,implicit integer (a-p,r-z); implicit logical (q)
  include "session.cmn"
  include "memory.cmn")

  subroutine checkpoint_modified_files
  header

  nch = 0
  bu_map(se_buffers,bu)
    if (bu_modified(bu) == 1 & bu_file_name(bu) != null)
      if (q_ch_buffer(bu))
	nch = nch + 1
      else {
	call ms_message2("Error checkpointing buffer ",bu_name(bu))
	call ms_error(EOS)
	}
  if (nch > 0)
    call ms_report_number2("Checkpointed ", nch, " file.", " files.")
  return
  end

  function q_ch_buffer(bu)
  header
  byte name(FILENAMESIZE)

  if (bu_modified(bu) == 3)
    q_ch_buffer = true
  else {
    q_ch_buffer = q_ch_name(bu, name)
    if (q_ch_buffer) {
      modif = bu_modified(bu)
      q_ch_buffer = q_mp_write_file(bu,name,'U',stat)
      if (q_ch_buffer & mod(modif,2) == 1)
	bu_modified(bu) = 3		# up-to-date checkpoint file exists
      else
	bu_modified(bu) = modif
      }
    }
  return
  end

  function q_ch_name(bu, name)
  header
  byte name(ARB)

  if (bu_file_name(bu) == null)
    q_ch_name = q_ch_gen_name(st_buffer(bu_name(bu)),name)
  else
    q_ch_name = q_ch_gen_name(st_buffer(bu_file_name(bu)),name)
  return
  end

  function q_ch_gen_name(buname,chname)
  header
  byte buname(ARB), chname(ARB)

  i = ho_length(buname)
  len = min(77, i)
  chname(1) = '$'
  call movc(buname(max(1, i + 1 - len)), chname(2), len)
  if (len+1 < 40)
    chname(len+2) = '.'
  else
    call movc(chname(40), chname(41), len+2-40)
  chname(len+3) = EOS
  do i = 2, len+1
    if (i == 40)
      chname(i) = '.'
    else
      switch (chname(i)) {
	case 'A'-'Z','a'-'z','0'-'9','$','_','-':
	default:
	  chname(i) = '_'
	}
  return(! q_ho_equal(buname(ho_indexq(buname, ']')+1), chname))
  end

  subroutine ch_delete(bu)
  header
  byte name(FILENAMESIZE)

  if (q_ch_name(bu, name)) {
    call q_fi_delete(WRITE_UNIT,name)
    if (bu_modified(bu) == 3)		# up-to-date checkpoint file exists
      bu_modified(bu) = 1
    }
  return
  end

  function q_ch_recover(bu)
  header
  byte name(FILENAMESIZE)

  if (q_ch_name(bu, name))
    if (q_mp_read_file(bu,name,0,false)) {
      call ms_message2("Recovered ",bu_file_name(bu))
      call ms_add_to_message(" from ")
      call ms_add_to_message(name)
      bu_modified(bu) = 3		# up-to-date checkpoint file exists
      return(true)
      }
  return(false)
  end
